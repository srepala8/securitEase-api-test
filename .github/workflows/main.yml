name: API Tests with RestAssured

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up JDK 11
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 11

      # Step 3: Cache Maven dependencies
      - name: Cache Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-m2

      # Step 4: Detect pom.xml location
      - name: Detect pom.xml location
        id: find-pom
        run: |
          if [ -f "pom.xml" ]; then
            echo "POM_DIR=." >> $GITHUB_ENV
          else
            POM_PATH=$(find . -name "pom.xml" | head -n 1)
            if [ -z "$POM_PATH" ]; then
              echo "No pom.xml found!"
              exit 1
            fi
            POM_DIR=$(dirname "$POM_PATH")
            echo "POM_DIR=$POM_DIR" >> $GITHUB_ENV
          fi
          echo "Using POM directory: $POM_DIR"

      # Step 5: Verify project structure
      - name: List source and test folders
        run: |
          echo "Listing Java source files..."
          ls -R ${{ env.POM_DIR }}/src/main/java || echo "No main/java folder"
          echo "Listing test files..."
          ls -R ${{ env.POM_DIR }}/src/test/java || echo "No test/java folder"

      # Step 6: Build project and compile tests
      - name: Build and compile tests
        run: |
          cd ${{ env.POM_DIR }}
          mvn clean compile test-compile -X
        env:
          MAVEN_OPTS: "-Dmaven.repo.local=$HOME/.m2/repository"

      # Step 7: Verify compiled test classes
      - name: List compiled test classes
        run: |
          ls -R ${{ env.POM_DIR }}/target/test-classes

      # Step 8: Run TestNG tests
      - name: Run TestNG tests
        run: |
          cd ${{ env.POM_DIR }}
          mvn test -X
        env:
          MAVEN_OPTS: "-Dmaven.repo.local=$HOME/.m2/repository"

      # Step 9: Upload TestNG reports
      - name: Upload TestNG report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: TestNG-Report
          path: ${{ env.POM_DIR }}/target/surefire-reports/
